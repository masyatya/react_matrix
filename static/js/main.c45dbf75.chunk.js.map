{"version":3,"sources":["store/randomObjects.js","store/index.js","components/AddForm/index.js","components/AddForm/AddForm.jsx","components/Table/Table.jsx","App.js","index.js"],"names":["initialState","randomObjects","highlightObjects","rowPercentages","xValue","randomObjectsReducer","state","action","type","inputData","mValue","nValue","mRows","i","nColumns","j","push","amount","Math","floor","random","id","res","map","row","item","objId","filterObjs","filter","obj","index","length","copy","Date","now","result","forEach","diffs","difference","abs","sort","a","b","slice","percentages","round","sum","toFixed","getXvalue","selectorsRandomObjects","getRandomObjects","getHighlightObjects","getRowPercentages","rootReducer","combineReducers","store","createStore","AddForm","dispatch","useDispatch","useState","setInputData","mError","nError","xError","hasError","setHasError","handleChange","event","target","value","isNaN","prev","prevState","className","onSubmit","preventDefault","setInputValue","htmlFor","classnames","placeholder","onChange","onClick","Table","objs","useSelector","selectors","setMrows","footTable","setFootTable","handleAdd","useCallback","handleDelete","useEffect","tFoot","Array","fill","nColumn","key","highlight","some","o","onMouseEnter","findXobjs","onMouseLeave","unshift","sumConst","onMouseOut","onMouseOver","setPercentages","n","nCol","idx","itemNcol","App","ReactDOM","render","document","getElementById"],"mappings":"wRAuBMA,EAAe,CACnBC,cAAe,GACfC,iBAAkB,GAClBC,eAAgB,GAChBC,OAAQ,GA+GKC,EA5Gc,WAAmC,IAAlCC,EAAiC,uDAAzBN,EAAcO,EAAW,uCAC7D,OAAOA,EAAOC,MACZ,IAhCoB,kBAmClB,IAHF,MAC6BD,EAAOE,UAA1BC,EADV,EACUA,OAAQC,EADlB,EACkBA,OACVC,EAAQ,GACNC,EAAI,EAAGA,GAAKH,EAAQG,IAAK,CAE/B,IADA,IAAMC,EAAW,GACTC,EAAI,EAAGA,GAAKJ,EAAQI,IAC1BD,EAASE,KAAK,CACZC,OAAQC,KAAKC,MAAM,IAAAD,KAAKE,SAAqB,KAC7CC,GAAKR,EAAI,IAAFE,IAIXH,EAAMI,KAAKF,GAEb,OAAO,2BACFR,GADL,IAEEL,cAAeW,EACfR,OAAQG,EAAOE,UAAUL,SAE7B,IAlDgB,cAmDd,IAAMkB,EAAM,YAAIhB,EAAML,eAAesB,KAAI,SAAAC,GACvC,OAAOA,EAAID,KAAI,SAAAE,GACb,OAAGA,EAAKJ,KAAOd,EAAOmB,MACb,2BAAKD,GAAZ,IAAkBR,SAAUQ,EAAKR,SAE5BQ,QAGX,OAAO,2BACFnB,GADL,IAEEL,cAAeqB,IAEnB,IA9De,aA+Db,IAAIK,EAAarB,EAAML,cAAc2B,QAAO,SAACC,EAAKhB,GAAN,OAAYA,IAAMN,EAAOuB,SAIrE,OAHkC,IAA/BxB,EAAML,cAAc8B,SACrBJ,EAAa,IAER,2BACFrB,GADL,IAEEL,cAAe0B,IAEnB,IAtEY,UAyEV,IAFA,IAAMK,EAAI,YAAO1B,EAAML,eACjBa,EAAW,GACTC,EAAI,EAAGA,GAAKR,EAAOI,OAAQI,IACjCD,EAASE,KAAK,CACZC,OAAQC,KAAKC,MAAM,IAAAD,KAAKE,SAAqB,KAC7CC,GAAKY,KAAKC,MAAU,IAAFnB,IAItB,OADAiB,EAAKhB,KAAKF,GACH,2BACFR,GADL,IAEEL,cAAe+B,IAEnB,IAnFgB,cAoFd,GAAG1B,EAAMJ,iBAAiB6B,QACrBxB,EAAOc,KAAOf,EAAMJ,iBAAiB,GAAGmB,GACzC,OAAO,eACFf,GAIT,IAAI6B,EAAS,GACb7B,EAAML,cAAcmC,SAAQ,SAAAZ,GAC1BA,EAAID,KAAI,SAAAE,GAAI,OAAIU,EAAOnB,KAAKS,SAG9B,IADA,IAAMY,EAAQ,GACNxB,EAAI,EAAGA,EAAIsB,EAAOJ,OAAQlB,IAChCwB,EAAMrB,KAAK,CAAEsB,WAAYpB,KAAKqB,IAAIJ,EAAOtB,GAAGI,OAASV,EAAOU,QAASI,GAAIc,EAAOtB,GAAGQ,KAGrF,OADAgB,EAAMG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEH,WAAaI,EAAEJ,cAC/B,2BACFhC,GADL,IAEEJ,iBAAkBmC,EAAMM,MAAM,IAAKpC,EAAOH,UAE9C,IAvGiB,eAwGf,OAAO,2BACFE,GADL,IAEEJ,iBAAkB,KAEtB,IA3GoB,kBA4GlB,GAAGI,EAAMH,eAAe4B,QACnBzB,EAAMH,eAAe,GAAGkB,KAAOf,EAAML,cAAcM,EAAOuB,OAAO,GAAGT,GACrE,OAAO,eACFf,GAIT,IAAMsC,EAAc,YAAItC,EAAML,cAAcM,EAAOuB,QAAQP,KAAI,SAAAE,GAC7D,OAAO,2BAAKA,GAAZ,IAAkBR,QAASC,KAAK2B,MAAMpB,EAAKR,OAAOV,EAAOuC,IAAI,KAAK,KAAKC,QAAQ,QAEjF,OAAO,2BACFzC,GADL,IAEEH,eAAgByC,IAEpB,IAzHsB,oBA0HpB,OAAO,2BACFtC,GADL,IAEEH,eAAgB,KAEpB,QACE,OAAOG,IClIA0C,EAAY,SAAA1C,GAAK,ODcL,SAAAA,GAAK,OAAIA,EAAMF,OCdN6C,CAAiC3C,EAAML,gBAC5DiD,EAAmB,SAAA5C,GAAK,ODcL,SAAAA,GAAK,OAAIA,EAAML,cCdNgD,CAAwC3C,EAAML,gBAC1EkD,EAAsB,SAAA7C,GAAK,ODcL,SAAAA,GAAK,OAAIA,EAAMJ,iBCdN+C,CAA2C3C,EAAML,gBAChFmD,EAAoB,SAAA9C,GAAK,ODcL,SAAAA,GAAK,OAAIA,EAAMH,eCdN8C,CAAyC3C,EAAML,gBAEnFoD,EAAcC,YAAgB,CAClCrD,cAAeI,IAKFkD,EAFDC,YAAYH,G,sCCXXI,G,MCIQ,WACrB,IAAMC,EAAWC,cADU,EAEOC,mBAAS,CACzClD,OAAQ,GACRC,OAAQ,GACRP,OAAQ,KALiB,mBAEpBK,EAFoB,KAEToD,EAFS,OAOKD,mBAAS,CACvCE,OAAQ,GACRC,OAAQ,GACRC,OAAQ,KAViB,mBAOpBC,EAPoB,KAOVC,EAPU,KA6BrBC,EAAe,SAAAC,GAAU,IAAD,EACNA,EAAMC,OAApBhD,EADoB,EACpBA,GAAIiD,EADgB,EAChBA,MACJ5D,EAAmBD,EAAnBC,OAAQC,EAAWF,EAAXE,OAChB,OAAOU,GACL,IAAK,SACAiD,GAAS,GAAKA,EAAQ,IAAMC,MAAMD,GACnCJ,GAAY,SAAAM,GAAI,kCAAUA,GAAV,IAAgBV,QAAQ,OAExCI,GAAY,SAAAM,GAAI,kCAAUA,GAAV,IAAgBV,QAAQ,OAE1C,MACF,IAAK,SACAQ,GAAS,GAAKA,EAAQ,IAAMC,MAAMD,GACnCJ,GAAY,SAAAM,GAAI,kCAAUA,GAAV,IAAgBT,QAAQ,OAExCG,GAAY,SAAAM,GAAI,kCAAUA,GAAV,IAAgBT,QAAQ,OAE1C,MACF,IAAK,SACAO,EAAQ5D,EAASC,EAAS,GAAK2D,EAAQ,GAAKC,MAAMD,GACnDJ,GAAY,SAAAM,GAAI,kCAAUA,GAAV,IAAgBR,QAAQ,OAExCE,GAAY,SAAAM,GAAI,kCAAUA,GAAV,IAAgBR,QAAQ,OAE1C,MACF,QACE,OAGJH,GAAa,SAAAY,GAAS,kCAAUA,GAAV,kBAAsBpD,EAAKiD,QAGnD,OACE,0BAAMI,UAAU,OAAOC,SAjDJ,SAAAP,GACnBA,EAAMQ,iBADsB,IAEpBxE,EAAWK,EAAXL,OACA0D,EAA2BG,EAA3BH,OAAQC,EAAmBE,EAAnBF,OAAQC,EAAWC,EAAXD,OAErBF,GAAUC,GAAUC,IAIT,KAAX5D,GACDyD,GAAa,SAAAW,GAAI,kCAAUA,GAAV,IAAgBpE,OAAQ,OAG3CsD,EHvByB,SAAAjD,GAAS,MAAK,CAAED,KATrB,kBAS4CC,aGuBvDoE,CAAcpE,OAqCrB,2BAAOqE,QAAQ,SAASJ,UAAU,eAAlC,MACA,2BACEJ,MAAO7D,EAAUC,OACjBgE,UAAWK,IAAW,CACpB,aAAe,EACf,qBAAsBd,EAASH,SAEjCzC,GAAG,SACHb,KAAK,OACLwE,YAAY,8BACZC,SAAUd,IAEZ,2BAAOW,QAAQ,SAASJ,UAAU,eAAlC,MACA,2BACEJ,MAAO7D,EAAUE,OACjB+D,UAAWK,IAAW,CACpB,aAAe,EACf,qBAAsBd,EAASF,SAEjC1C,GAAG,SACHb,KAAK,OACLwE,YAAY,8BACZC,SAAUd,IAEZ,2BAAOW,QAAQ,SAASJ,UAAU,eAAlC,MACA,2BACEJ,MAAO7D,EAAUL,OACjBsE,UAAWK,IAAW,CACpB,aAAe,EACf,qBAAsBd,EAASD,SAEjC3C,GAAG,SACHb,KAAK,OACLwE,YAAY,gBACZC,SAAUd,IAEZ,4BACEO,UAAU,eACVlE,KAAK,UAFP,SAMA,4BACEkE,UAAU,eACVlE,KAAK,SACL0E,QAAS,kBAAMxB,EHtGU,CAAElD,KATnB,UASkCG,OGsGXF,EAAUE,WAH3C,cClGOwE,G,MAAQ,WACnB,IAAMzB,EAAWC,cACXyB,EAAOC,YAAYC,GACnBlF,EAASiF,YAAYC,GACrBpF,EAAmBmF,YAAYC,GAC/BnF,EAAiBkF,YAAYC,GALV,EAMC1B,mBAAS,MANV,mBAMlBhD,EANkB,KAMX2E,EANW,OAOS3B,mBAAS,MAPlB,mBAOlB4B,EAPkB,KAOPC,EAPO,KASnBC,EAAYC,uBAAY,SAACtE,GAC7BqC,EJb+B,CAAElD,KATjB,cASoCkB,MIajCL,MAClB,CAACqC,IAEEkC,EAAeD,uBAAY,SAAC9E,GAChC6C,EJhB+B,CAAElD,KATlB,aASoCsB,MIgBhCjB,MAClB,CAAC6C,IAmFJ,OAjFAmC,qBAAU,WACR,GAAGT,EAAKrD,OAAQ,CACd,IAAI+D,EAAQ,GACRhF,EAAW,IAAIiF,MAAMX,EAAK,GAAGrD,QAAQiE,KAAK,GAAGzE,KAAI,kBAAM,IAAIwE,MAAMX,EAAKrD,QAAQiE,KAAK,MACnFlD,EAAM,EACVyC,EAASH,EAAK7D,KAAI,SAACM,EAAKhB,GAEtB,IAAIoF,EADJnD,EAAM,EAGJmD,EADC9F,EAAe,IAAMA,EAAe,GAAGkB,KAAOQ,EAAI,GAAGR,GAC5ClB,EAAeoB,KAAI,SAAAE,GAC3B,OACE,wBACEiD,UAAS,wCAAmCxD,KAAK2B,MAAkB,IAAZpB,EAAKR,SAC5DiF,IAAKzE,EAAKJ,IAFZ,UAIMH,KAAK2B,MAAkB,IAAZpB,EAAKR,QAJtB,SAUMY,EAAIN,KAAI,SAAAE,GAChB,IAAM0E,EAAYjG,EAAiBkG,MAAK,SAAAC,GAAC,OAAIA,EAAEhF,KAAOI,EAAKJ,MAC3D,OACE,wBACE6D,QAAS,kBAAMQ,EAAUjE,EAAKJ,KAC9BiF,aAAc,kBAAM5C,EJ3CX,SAACzC,EAAQI,EAAIjB,GAAb,MAAyB,CAAEI,KAThC,cASmDS,SAAQI,KAAIjB,UI2CtCmG,CAAU9E,EAAKR,OAAQQ,EAAKJ,GAAIjB,KAC7DoG,aAAc,kBAAM9C,EJ3CH,CAAElD,KATd,kBIqDLkE,UAAS,sBAAiByB,EAAS,yBAA8B,IACjED,IAAKzE,EAAKJ,IAETI,EAAKR,WAKdY,EAAIO,SAAQ,SAACX,EAAMK,GACjBgB,GAAOrB,EAAKR,OACZH,EAASgB,GAAO2E,QAAQhF,MAE1BwE,EAAQQ,QACN,wBACE/B,UAAU,cACVwB,IAAKjE,KAAKC,MACVgD,QAAS,kBAAMU,EAAa/E,KAH9B,SAMF,IAAM6F,EAAW5D,EAWjB,OAVAmD,EAAQjF,KACN,wBACE0D,UAAU,+BACVwB,IAAKpD,EACL6D,WAAY,kBAAMjD,EJlES,CAAElD,KATf,uBI4EdoG,YAAa,kBAAMlD,EJpED,SAACZ,EAAKhB,GAAN,MAAiB,CAAEtB,KATzB,kBASgDsC,MAAKhB,SIoErC+E,CAAeH,EAAU7F,MAEnDiC,IAIJ,wBAAI4B,UAAU,aAAawB,IAAO,GAAFrF,EAAKoB,KAAKC,OACvC+D,QAKPnF,EAAWA,EAASS,KAAI,SAAAuF,GAAC,OAAIA,EAAEnE,MAAM,EAAGyC,EAAKrD,YACpCK,SAAQ,SAAC2E,EAAMC,GACtBlE,EAAM,EACNiE,EAAK3E,SAAQ,SAAA6E,GACXnE,GAAOmE,EAAShG,UAElB6E,EAAM9E,KACJ,wBAAI0D,UAAU,gCAAgCwB,IAAKpD,EAAMkE,EAAM/E,KAAKC,OAAQhB,KAAK2B,MAAMC,EAAMiE,EAAKhF,aAGtG+D,EAAMW,QAAQ,wBAAI/B,UAAU,cAAcwB,IAAKjE,KAAKC,SACpD4D,EAAM9E,KAAK,wBAAI0D,UAAU,cAAcwB,IAAKjE,KAAKC,MAAQ,KACzDuD,EAAaK,MAEd,CAACV,EAAMlF,EAAkBC,EAAgBuD,EAAUgC,EAAWE,EAAcxF,IAG7E,oCACGgF,EAAKrD,QACJ,2BAAO2C,UAAU,SACjB,2BAAOA,UAAU,eACd9D,GAEH,+BACE,4BACG4E,QC3GE0B,MATf,WACE,OACE,yBAAKxC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCDNyC,IAASC,OACP,kBAAC,IAAD,CAAU7D,MAAOA,GACf,kBAAC,EAAD,OAEF8D,SAASC,eAAe,W","file":"static/js/main.c45dbf75.chunk.js","sourcesContent":["const SET_INPUT_VALUE = 'SET_INPUT_VALUE';\nconst ADD_ONE_OBJ = 'ADD_ONE_OBJ';\nconst DELETE_ROW = 'DELETE_ROW';\nconst ADD_ROW = 'ADD_ROW';\nconst FIND_X_OBJS = 'FIND_X_OBJS';\nconst RESET_X_OBJS = 'RESET_X_OBJS'\nconst SET_PERCENTAGES = 'SET_PERCENTAGES';\nconst RESET_PERCENTAGES = 'RESET_PERCENTAGES';\n\nexport const setInputValue = inputData => ({ type: SET_INPUT_VALUE, inputData });\nexport const addOneObj = objId => ({ type: ADD_ONE_OBJ, objId });\nexport const deleteRow = index => ({ type: DELETE_ROW, index });\nexport const addRow = nValue => ({ type: ADD_ROW, nValue });\nexport const findXobjs = (amount, id, xValue) => ({ type: FIND_X_OBJS, amount, id, xValue });\nexport const resetXobjs = () => ({ type: RESET_X_OBJS });\nexport const setPercentages = (sum, index) => ({ type: SET_PERCENTAGES, sum, index });\nexport const resetPercentages = () => ({ type: RESET_PERCENTAGES });\n\nexport const getXvalue = state => state.xValue;\nexport const getRandomObjects = state => state.randomObjects;\nexport const getHighlightObjects = state => state.highlightObjects;\nexport const getRowPercentages = state => state.rowPercentages;\n\nconst initialState = {\n  randomObjects: [],\n  highlightObjects: [],\n  rowPercentages: [],\n  xValue: 0,\n};\n\nconst randomObjectsReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case SET_INPUT_VALUE:\n      const { mValue, nValue } = action.inputData;\n      const mRows = [];\n      for(let i = 1; i <= mValue; i++) {\n        const nColumns = [];\n        for(let j = 1; j <= nValue; j++) {\n          nColumns.push({\n            amount: Math.floor(Math.random()*(999-100+1)+100),\n            id: (i+j*100),\n          });\n        }\n\n        mRows.push(nColumns);\n      }\n      return {\n        ...state,\n        randomObjects: mRows,\n        xValue: action.inputData.xValue,\n      };\n    case ADD_ONE_OBJ:\n      const res = [...state.randomObjects].map(row => {\n        return row.map(item => {\n          if(item.id === action.objId) {\n            return { ...item, amount: ++item.amount }\n          }\n          return item;\n        });\n      });\n      return {\n        ...state,\n        randomObjects: res,\n      };\n    case DELETE_ROW:\n      let filterObjs = state.randomObjects.filter((obj, i) => i !== action.index)\n      if(state.randomObjects.length === 1) {\n        filterObjs = [];\n      }\n      return {\n        ...state,\n        randomObjects: filterObjs,\n      };\n    case ADD_ROW:\n      const copy = [...state.randomObjects];\n      const nColumns = [];\n      for(let j = 1; j <= action.nValue; j++) {\n        nColumns.push({\n          amount: Math.floor(Math.random()*(999-100+1)+100),\n          id: (Date.now() + j*100),\n        });\n      }\n      copy.push(nColumns);\n      return {\n        ...state,\n        randomObjects: copy,\n      };\n    case FIND_X_OBJS:\n      if(state.highlightObjects.length) {\n        if(action.id === state.highlightObjects[0].id) {\n          return {\n            ...state,\n          };\n        }\n      }\n      let result = [];\n      state.randomObjects.forEach(row => {\n        row.map(item => result.push(item));\n      });\n      const diffs = [];\n      for(let i = 0; i < result.length; i++) {\n        diffs.push({ difference: Math.abs(result[i].amount - action.amount), id: result[i].id});\n      }\n      diffs.sort((a, b) => a.difference - b.difference);\n      return {\n        ...state,\n        highlightObjects: diffs.slice(0, ++action.xValue),\n      };\n    case RESET_X_OBJS:\n      return {\n        ...state,\n        highlightObjects: [],\n      };\n    case SET_PERCENTAGES:\n      if(state.rowPercentages.length) {\n        if(state.rowPercentages[0].id === state.randomObjects[action.index][0].id) {\n          return {\n            ...state,\n          };\n        }\n      }\n      const percentages = [...state.randomObjects[action.index]].map(item => {\n        return { ...item, amount: (Math.round(item.amount/action.sum*100)/100).toFixed(2) }\n      });\n      return {\n        ...state,\n        rowPercentages: percentages,\n      };\n    case RESET_PERCENTAGES:\n      return {\n        ...state,\n        rowPercentages: [],\n      }\n    default:\n      return state;\n  }\n}\n\nexport default randomObjectsReducer;","import { combineReducers, createStore } from 'redux';\nimport randomObjectsReducer from './randomObjects';\nimport * as selectorsRandomObjects from './randomObjects';\n\nexport const getXvalue = state => selectorsRandomObjects.getXvalue(state.randomObjects);\nexport const getRandomObjects = state => selectorsRandomObjects.getRandomObjects(state.randomObjects);\nexport const getHighlightObjects = state => selectorsRandomObjects.getHighlightObjects(state.randomObjects);\nexport const getRowPercentages = state => selectorsRandomObjects.getRowPercentages(state.randomObjects);\n\nconst rootReducer = combineReducers({\n  randomObjects: randomObjectsReducer,\n})\n\nconst store = createStore(rootReducer);\n\nexport default store;","import { AddForm } from './AddForm';\n\nexport default AddForm;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setInputValue, addRow } from '../../store/randomObjects';\nimport classnames from 'classnames';\nimport './AddForm.scss';\n\nexport const AddForm = () => {\n  const dispatch = useDispatch();\n  const [inputData, setInputData] = useState({\n    mValue: '',\n    nValue: '',\n    xValue: '',\n  });\n  const [hasError, setHasError] = useState({\n    mError: '',\n    nError: '',\n    xError: '',\n  });\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { xValue } = inputData;\n    const { mError, nError, xError } = hasError;\n\n    if(mError || nError || xError) {\n      return;\n    }\n\n    if(xValue === '') {\n      setInputData(prev => ({ ...prev, xValue: 0 }));\n    }\n\n    dispatch(setInputValue(inputData));\n  }\n\n  const handleChange = event => {\n    const { id, value } = event.target;\n    const { mValue, nValue } = inputData;\n    switch(id) {\n      case 'mValue':\n        if(value <= 0 || value > 20 || isNaN(value)) {\n          setHasError(prev => ({ ...prev, mError: true}));\n        } else {\n          setHasError(prev => ({ ...prev, mError: false }));\n        }\n        break;\n      case 'nValue':\n        if(value <= 0 || value > 12 || isNaN(value)) {\n          setHasError(prev => ({ ...prev, nError: true}));\n        } else {\n          setHasError(prev => ({ ...prev, nError: false }));\n        }\n        break;\n      case 'xValue':\n        if(value > mValue * nValue - 1 || value < 0 || isNaN(value)) {\n          setHasError(prev => ({ ...prev, xError: true }));\n        } else {\n          setHasError(prev => ({ ...prev, xError: false }));\n        }\n        break;\n      default:\n        return;\n    }\n\n    setInputData(prevState => ({ ...prevState, [id]: value }));\n  }\n\n  return (\n    <form className=\"form\" onSubmit={handleSubmit}>\n      <label htmlFor=\"mValue\" className=\"form__label\">M:</label>\n      <input \n        value={inputData.mValue}\n        className={classnames({\n          'form__input': true,\n          'form__input--error': hasError.mError,\n        })}\n        id=\"mValue\"\n        type=\"text\" \n        placeholder=\"Enter M value(from 1 to 20)\"\n        onChange={handleChange}\n      />\n      <label htmlFor=\"nValue\" className=\"form__label\">N:</label>\n      <input \n        value={inputData.nValue}\n        className={classnames({\n          'form__input': true,\n          'form__input--error': hasError.nError,\n        })}\n        id=\"nValue\"\n        type=\"text\" \n        placeholder=\"Enter N value(from 1 to 12)\"\n        onChange={handleChange}\n      />\n      <label htmlFor=\"xValue\" className=\"form__label\">X:</label>\n      <input \n        value={inputData.xValue}\n        className={classnames({\n          'form__input': true,\n          'form__input--error': hasError.xError,\n        })}\n        id=\"xValue\"\n        type=\"text\" \n        placeholder=\"Enter X value\"\n        onChange={handleChange}\n      />\n      <button \n        className=\"form__button\"\n        type=\"submit\"\n      >\n        Apply\n      </button>\n      <button\n        className=\"form__button\"\n        type=\"button\"\n        onClick={() => dispatch(addRow(inputData.nValue))}\n      >\n        Add row\n      </button>\n    </form>\n  );\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { \n  addOneObj, \n  deleteRow, \n  findXobjs, \n  resetPercentages, \n  resetXobjs, \n  setPercentages\n} from '../../store/randomObjects';\nimport * as selectors from '../../store';\nimport './Table.scss';\n\nexport const Table = () => {\n  const dispatch = useDispatch();\n  const objs = useSelector(selectors.getRandomObjects);\n  const xValue = useSelector(selectors.getXvalue);\n  const highlightObjects = useSelector(selectors.getHighlightObjects);\n  const rowPercentages = useSelector(selectors.getRowPercentages);\n  const [mRows, setMrows] = useState(null);\n  const [footTable, setFootTable] = useState(null);\n\n  const handleAdd = useCallback((id) => {\n    dispatch(addOneObj(id));\n  }, [dispatch]);\n\n  const handleDelete = useCallback((i) => {\n    dispatch(deleteRow(i))\n  }, [dispatch]);\n\n  useEffect(() => {\n    if(objs.length) {\n      let tFoot = [];\n      let nColumns = new Array(objs[0].length).fill(0).map(() => new Array(objs.length).fill(0));\n      let sum = 0;\n      setMrows(objs.map((obj, i) => {\n        sum = 0;\n        let nColumn;\n        if(rowPercentages[0] && rowPercentages[0].id === obj[0].id) {\n          nColumn = rowPercentages.map(item => {\n            return (\n              <td \n                className={`table__item table__item--perc-${Math.round(item.amount*100)}`}\n                key={item.id}\n              >\n                {`${Math.round(item.amount*100)}%`}\n              </td>\n            )\n          });\n        }\n        else {\n          nColumn = obj.map(item => {\n            const highlight = highlightObjects.some(o => o.id === item.id);\n            return (\n              <td \n                onClick={() => handleAdd(item.id)}\n                onMouseEnter={() => dispatch(findXobjs(item.amount, item.id, xValue))}\n                onMouseLeave={() => dispatch(resetXobjs())}\n                className={`table__item ${highlight ? `table__item--highlight` : ''}`}\n                key={item.id}\n              >\n                {item.amount}\n              </td>\n            )\n          });\n        }\n        obj.forEach((item, index) => {\n          sum += item.amount;\n          nColumns[index].unshift(item);\n        });\n        nColumn.unshift(\n          <td \n            className=\"table__item\" \n            key={Date.now()}\n            onClick={() => handleDelete(i)}\n          >&times;</td>\n        )\n        const sumConst = sum;\n        nColumn.push(\n          <td \n            className=\"table__item table__item--sum\"\n            key={sum}\n            onMouseOut={() => dispatch(resetPercentages())}\n            onMouseOver={() => dispatch(setPercentages(sumConst, i))}\n          >\n             {sum}\n          </td>\n        )\n        return (\n          <tr className=\"table__row\" key={i*10*Date.now()}>\n            {nColumn}\n          </tr>\n        );\n      }));\n\n      nColumns = nColumns.map(n => n.slice(0, objs.length));\n      nColumns.forEach((nCol, idx) => {\n        sum = 0;\n        nCol.forEach(itemNcol => {\n          sum += itemNcol.amount;\n        });\n        tFoot.push(\n          <td className=\"table__item table__item--foot\" key={sum * idx * Date.now()}>{Math.round(sum / nCol.length)}</td>\n        )\n      });\n      tFoot.unshift(<td className=\"table__item\" key={Date.now()}></td>);\n      tFoot.push(<td className=\"table__item\" key={Date.now() + 1}></td>);\n      setFootTable(tFoot);\n    }\n  }, [objs, highlightObjects, rowPercentages, dispatch, handleAdd, handleDelete, xValue]);\n\n  return (\n    <>\n      {objs.length && (\n        <table className='table'>\n        <tbody className='table__body'>\n          {mRows}\n        </tbody>\n        <tfoot>\n          <tr>\n            {footTable}\n          </tr>\n        </tfoot>\n      </table>\n      )}\n    </>\n  );\n};","import React from 'react';\nimport AddForm from './components/AddForm';\nimport { Table } from './components/Table/Table';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AddForm />\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './assets/scss/main.scss';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}